
mysql> select * from movie;
+-----+-------------------------+------+------------------+
| mid | title                   | year | director         |
+-----+-------------------------+------+------------------+
| 101 | Gone with the wind      | 1939 | Victor Fleming   |
| 102 | Star Wars               | 1977 | George Lucas     |
| 103 | The Sound of Music      | 1965 | Robert Wise      |
| 104 | E.T.                    | 1982 | Steven Spielberg |
| 105 | Titanic                 | 1997 | James Cameron    |
| 106 | Snow White              | 1937 | NULL             |
| 107 | Avatar                  | 2009 | James Cameron    |
| 108 | Raiders of the Lost Ark | 1981 | Steven Spielberg |
+-----+-------------------------+------+------------------+
8 rows in set (0.00 sec)

mysql> select * from reviewer;
+-----+------------------+
| rid | name             |
+-----+------------------+
| 201 | Sarah Martinez   |
| 202 | Daniel Lewis     |
| 203 | Brittany Harris  |
| 204 | Mike Anderson    |
| 205 | Chris Jackson    |
| 206 | Elizabeth Thomas |
| 207 | James Cameron    |
| 208 | Ashley White     |
+-----+------------------+
8 rows in set (0.00 sec)

mysql> select * from rating;
+------+------+-------+------------+
| rid  | mid  | stars | ratingdate |
+------+------+-------+------------+
|  202 |  106 |     4 | NULL       |
|  201 |  101 |     2 | 2011-01-22 |
|  201 |  101 |     4 | 2011-01-27 |
|  203 |  103 |     2 | 2011-01-20 |
|  203 |  108 |     4 | 2011-01-12 |
|  203 |  108 |     2 | 2011-01-30 |
|  204 |  101 |     3 | 2011-01-09 |
|  205 |  103 |     3 | 2011-01-27 |
|  205 |  104 |     2 | 2011-01-22 |
|  205 |  108 |     4 | NULL       |
|  206 |  107 |     3 | 2011-01-15 |
|  206 |  106 |     5 | 2011-01-19 |
|  207 |  107 |     5 | 2011-01-20 |
|  208 |  104 |     3 | 2011-01-02 |
+------+------+-------+------------+
14 rows in set (0.00 sec)

1. Find the titles of all movies directed by Steven Spielberg. (1 point possible)

select title from movie where director='Steven Spielberg';
+-------------------------+
| title                   |
+-------------------------+
| E.T.                    |
| Raiders of the Lost Ark |
+-------------------------+

2. Find all years that have a movie that received a rating of 4 or 5, and sort 
them in increasing order. (1 point possible)

select distinct m.year from movie m join rating r on m.mid=r.mid where r.stars=4 or r.stars=5 order by m.year;
+------+
| year |
+------+
| 1937 |
| 1939 |
| 1981 |
| 2009 |
+------+

3. Find the titles of all movies that have no ratings. (1 point possible)

select title,mid from movie where mid not in (select distinct mid from rating);
+-----------+-----+
| title     | mid |
+-----------+-----+
| Star Wars | 102 |
| Titanic   | 105 |
+-----------+-----+

4. Some reviewers didn't provide a date with their rating. 
Find the names of all reviewers who have ratings with a NULL value for the date. 
(1 point possible)

select re.name from reviewer re join rating ra on re.rid=ra.rid
where ra.ratingdate is null;
+---------------+
| name          |
+---------------+
| Daniel Lewis  |
| Chris Jackson |
+---------------+
5. Write a query to return the ratings data in a more readable format: 
reviewer name, movie title, stars, and ratingDate. Also, sort the data, first by 
reviewer name, then by movie title, and lastly by number of stars.
(1 point possible)

select re.name,m.title,ra.stars,ra.ratingdate from rating ra join movie m on 
m.mid=ra.mid join reviewer re on re.rid=ra.rid order by re.name,m.title,ra.stars;
+------------------+-------------------------+-------+------------+
| name             | title                   | stars | ratingdate |
+------------------+-------------------------+-------+------------+
| Ashley White     | E.T.                    |     3 | 2011-01-02 |
| Brittany Harris  | Raiders of the Lost Ark |     2 | 2011-01-30 |
| Brittany Harris  | Raiders of the Lost Ark |     4 | 2011-01-12 |
| Brittany Harris  | The Sound of Music      |     2 | 2011-01-20 |
| Chris Jackson    | E.T.                    |     2 | 2011-01-22 |
| Chris Jackson    | Raiders of the Lost Ark |     4 | NULL       |
| Chris Jackson    | The Sound of Music      |     3 | 2011-01-27 |
| Daniel Lewis     | Snow White              |     4 | NULL       |
| Elizabeth Thomas | Avatar                  |     3 | 2011-01-15 |
| Elizabeth Thomas | Snow White              |     5 | 2011-01-19 |
| James Cameron    | Avatar                  |     5 | 2011-01-20 |
| Mike Anderson    | Gone with the wind      |     3 | 2011-01-09 |
| Sarah Martinez   | Gone with the wind      |     2 | 2011-01-22 |
| Sarah Martinez   | Gone with the wind      |     4 | 2011-01-27 |
+------------------+-------------------------+-------+------------+

6. For all cases where the same reviewer rated the same movie twice and gave it a
higher rating the second time, return the reviewer's name and the title of the 
movie. (1 point possible)

7. For each movie that has at least one rating, find the highest number of stars
 that movie received. Return the movie title and number of stars. 
Sort by movie title. (1 point possible)

8. For each movie, return the title and the 'rating spread', that is, 
the difference between highest and lowest ratings given to that movie. 
Sort by rating spread from highest to lowest, then by movie title. (1 point possible)

9. Find the difference between the average rating of movies released before 1980
and the average rating of movies released after 1980.(Make sure to calculate the 
average rating for each movie,then the average of those averages for movies before
1980 and movies after. Don't just calculate the overall average rating before and
after 1980.) (1 point possible)

10. Find the names of all reviewers who rated Gone with the Wind. (1 point possible)
 
select re.name,m.title,ra.stars,ra.ratingdate from rating ra join movie m on 
m.mid=ra.mid join reviewer re on re.rid=ra.rid order by re.name,m.title,ra.stars;
+------------------+-------------------------+-------+------------+
| name             | title                   | stars | ratingdate |
+------------------+-------------------------+-------+------------+
| Ashley White     | E.T.                    |     3 | 2011-01-02 |
| Brittany Harris  | Raiders of the Lost Ark |     2 | 2011-01-30 |
| Brittany Harris  | Raiders of the Lost Ark |     4 | 2011-01-12 |
| Brittany Harris  | The Sound of Music      |     2 | 2011-01-20 |
| Chris Jackson    | E.T.                    |     2 | 2011-01-22 |
| Chris Jackson    | Raiders of the Lost Ark |     4 | NULL       |
| Chris Jackson    | The Sound of Music      |     3 | 2011-01-27 |
| Daniel Lewis     | Snow White              |     4 | NULL       |
| Elizabeth Thomas | Avatar                  |     3 | 2011-01-15 |
| Elizabeth Thomas | Snow White              |     5 | 2011-01-19 |
| James Cameron    | Avatar                  |     5 | 2011-01-20 |
| Mike Anderson    | Gone with the wind      |     3 | 2011-01-09 |
| Sarah Martinez   | Gone with the wind      |     2 | 2011-01-22 |
| Sarah Martinez   | Gone with the wind      |     4 | 2011-01-27 |
+------------------+-------------------------+-------+------------+

create view starrating as select re.name,m.title,ra.stars,ra.ratingdate from 
rating ra join movie m on m.mid=ra.mid join reviewer re on re.rid=ra.rid order
by re.name,m.title,ra.stars;

select distinct name from starrating where title='Gone with the wind';
+----------------+
| name           |
+----------------+
| Sarah Martinez |
| Mike Anderson  |
+----------------+

select distinct re.name from reviewer re join rating ra on re.rid=ra.rid join movie m on m.mid=ra.mid where m.title='Gone with the wind';
+----------------+
| name           |
+----------------+
| Sarah Martinez |
| Mike Anderson  |
+----------------+

11. For any rating where the reviewer is the same as the director of the movie, 
return the reviewer name, movie title, and number of stars. (1 point possible)

select re.name,m.director,m.title,ra.stars,ra.ratingdate from rating ra join movie m on m.mid=ra.mid join reviewer re on re.rid=ra.rid;
+------------------+------------------+-------------------------+-------+------------+
| name             | director         | title                   | stars | ratingdate |
+------------------+------------------+-------------------------+-------+------------+
| Daniel Lewis     | NULL             | Snow White              |     4 | NULL       |
| Sarah Martinez   | Victor Fleming   | Gone with the wind      |     2 | 2011-01-22 |
| Sarah Martinez   | Victor Fleming   | Gone with the wind      |     4 | 2011-01-27 |
| Brittany Harris  | Robert Wise      | The Sound of Music      |     2 | 2011-01-20 |
| Brittany Harris  | Steven Spielberg | Raiders of the Lost Ark |     4 | 2011-01-12 |
| Brittany Harris  | Steven Spielberg | Raiders of the Lost Ark |     2 | 2011-01-30 |
| Mike Anderson    | Victor Fleming   | Gone with the wind      |     3 | 2011-01-09 |
| Chris Jackson    | Robert Wise      | The Sound of Music      |     3 | 2011-01-27 |
| Chris Jackson    | Steven Spielberg | E.T.                    |     2 | 2011-01-22 |
| Chris Jackson    | Steven Spielberg | Raiders of the Lost Ark |     4 | NULL       |
| Elizabeth Thomas | James Cameron    | Avatar                  |     3 | 2011-01-15 |
| Elizabeth Thomas | NULL             | Snow White              |     5 | 2011-01-19 |
| James Cameron    | James Cameron    | Avatar                  |     5 | 2011-01-20 |
| Ashley White     | Steven Spielberg | E.T.                    |     3 | 2011-01-02 |
+------------------+------------------+-------------------------+-------+------------+

mysql> create view view1 as select re.name,m.director,m.title,ra.stars,ra.ratingdate from 
rating ra join movie m on m.mid=ra.mid join reviewer re on re.rid=ra.rid;
Query OK, 0 rows affected (0.12 sec)

mysql> select re.name,m.title,ra.stars from rating ra join movie m on m.mid=ra.mid 
join reviewer re on re.rid=ra.rid where re.name=m.director;
+---------------+--------+-------+
| name          | title  | stars |
+---------------+--------+-------+
| James Cameron | Avatar |     5 |
+---------------+--------+-------+


12. Return all reviewer names and movie names together in a single list, 
alphabetized. (Sorting by the first name of the reviewer and first word in the 
title is fine; no need for special processing on last names or removing "The".) 
(1 point possible)

13. Find the titles of all movies not reviewed by Chris Jackson. (1 point possible)


14. For all pairs of reviewers such that both reviewers gave a rating to the same
 movie, return the names of both reviewers. Eliminate duplicates, don't pair 
reviewers with themselves, and include each pair only once. For each pair, 
return the names in the pair in alphabetical order. (1 point possible)

15. For each rating that is the lowest (fewest stars) currently in the database, 
return the reviewer name, movie title, and number of stars. (1 point possible)

16. List movie titles and average ratings, from highest-rated to lowest-rated. 
If two or more movies have the same average rating, list them in alphabetical 
order. (1 point possible)

17. Find the names of all reviewers who have contributed three or more ratings. 
(As an extra challenge, try writing the query without HAVING or without COUNT.) 
(1 point possible)

18. Some directors directed more than one movie. For all such directors, return 
the titles of all movies directed by them, along with the director name. Sort by
 director name, then movie title. (As an extra challenge, try writing the query 
both with and without COUNT.) (1 point possible)

19. Find the movie(s) with the highest average rating. Return the movie title(s) 
and average rating. (Hint: This query is more difficult to write in SQLite than 
other systems; you might think of it as finding the highest average rating and 
then choosing the movie(s) with that average rating.) (1 point possible)

20. Find the movie(s) with the lowest average rating. Return the movie title(s) 
and average rating. (Hint: This query may be more difficult to write in SQLite 
than other systems; you might think of it as finding the lowest average rating 
and then choosing the movie(s) with that average rating.) (1 point possible)

21. For each director, return the director's name together with the title(s) of 
the movie(s) they directed that received the highest rating among all of their 
movies, and the value of that rating. Ignore movies whose director is NULL. 
(1 point possible)




 















